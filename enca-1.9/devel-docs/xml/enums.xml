<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libenca-Typedefs-and-Constants">
<refmeta>
<refentrytitle>Typedefs and Constants</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBENCA Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Typedefs and Constants</refname><refpurpose>Enca library typedefs, enums and constants.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



            <link linkend="EncaEncoding">EncaEncoding</link>;
#define     <link linkend="ENCA-CS-UNKNOWN:CAPS">ENCA_CS_UNKNOWN</link>
enum        <link linkend="EncaSurface">EncaSurface</link>;
enum        <link linkend="EncaCharsetFlags">EncaCharsetFlags</link>;
enum        <link linkend="EncaNameStyle">EncaNameStyle</link>;
enum        <link linkend="EncaErrno">EncaErrno</link>;
#define     <link linkend="ENCA-NOT-A-CHAR:CAPS">ENCA_NOT_A_CHAR</link>
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="EncaEncoding"/>EncaEncoding</title>
<indexterm><primary>EncaEncoding</primary></indexterm><programlisting>typedef struct {
 int charset; EncaSurface surface; 
} EncaEncoding;
</programlisting>
<para>
Encoding, i.e. charset and surface.
</para>
<para>
This is what <link linkend="enca-analyse"><function>enca_analyse()</function></link> and <link linkend="enca-analyse-const"><function>enca_analyse_const()</function></link> return.
</para>
<para>
The <parameter>charset</parameter> field is an opaque numerical charset identifier, which has no
meaning outside Enca library.
You will probably want to use it only as <link linkend="enca-charset-name"><function>enca_charset_name()</function></link> argument.
It is only guaranteed not to change meaning
during program execution time; change of its interpretation (e.g. due to
addition of new charsets) is not considered API change.
</para>
<para>
The <parameter>surface</parameter> field is a combination of <link linkend="EncaSurface"><type>EncaSurface</type></link> flags.  You may want
to ignore it completely; you should use <link linkend="enca-set-interpreted-surfaces"><function>enca_set_interpreted_surfaces()</function></link>
to disable weird surfaces then.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="int">int</link>&nbsp;<structfield>charset</structfield>;</term>
<listitem><simpara> Numeric charset identifier.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="EncaSurface">EncaSurface</link>&nbsp;<structfield>surface</structfield>;</term>
<listitem><simpara> Surface flags.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ENCA-CS-UNKNOWN:CAPS"/>ENCA_CS_UNKNOWN</title>
<indexterm><primary>ENCA_CS_UNKNOWN</primary></indexterm><programlisting>#define ENCA_CS_UNKNOWN (-1)
</programlisting>
<para>
Unknown character set id.
</para>
<para>
Use <link linkend="enca-charset-is-known"><function>enca_charset_is_known()</function></link> to check for unknown charset instead of direct
comparsion.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="EncaSurface"/>enum EncaSurface</title>
<indexterm><primary>EncaSurface</primary></indexterm><programlisting>typedef enum { /*&lt; flags &gt;*/
  ENCA_SURFACE_EOL_CR    = 1 &lt;&lt; 0,
  ENCA_SURFACE_EOL_LF    = 1 &lt;&lt; 1,
  ENCA_SURFACE_EOL_CRLF  = 1 &lt;&lt; 2,
  ENCA_SURFACE_EOL_MIX   = 1 &lt;&lt; 3,
  ENCA_SURFACE_EOL_BIN   = 1 &lt;&lt; 4,
  ENCA_SURFACE_MASK_EOL  = (ENCA_SURFACE_EOL_CR
                            | ENCA_SURFACE_EOL_LF
                            | ENCA_SURFACE_EOL_CRLF
                            | ENCA_SURFACE_EOL_MIX
                            | ENCA_SURFACE_EOL_BIN),
  ENCA_SURFACE_PERM_21    = 1 &lt;&lt; 5,
  ENCA_SURFACE_PERM_4321  = 1 &lt;&lt; 6,
  ENCA_SURFACE_PERM_MIX   = 1 &lt;&lt; 7,
  ENCA_SURFACE_MASK_PERM  = (ENCA_SURFACE_PERM_21
                             | ENCA_SURFACE_PERM_4321
                             | ENCA_SURFACE_PERM_MIX),
  ENCA_SURFACE_QP        = 1 &lt;&lt; 8,
  ENCA_SURFACE_REMOVE    = 1 &lt;&lt; 13,
  ENCA_SURFACE_UNKNOWN   = 1 &lt;&lt; 14,
  ENCA_SURFACE_MASK_ALL  = (ENCA_SURFACE_MASK_EOL
                            | ENCA_SURFACE_MASK_PERM
                            | ENCA_SURFACE_QP
                            | ENCA_SURFACE_REMOVE)
} EncaSurface;
</programlisting>
<para>
Surface flags.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ENCA_SURFACE_EOL_CR</literal></term>
<listitem><simpara> End-of-lines are represented with CR's.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_EOL_LF</literal></term>
<listitem><simpara> End-of-lines are represented with LF's.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_EOL_CRLF</literal></term>
<listitem><simpara> End-of-lines are represented with CRLF's.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_EOL_MIX</literal></term>
<listitem><simpara> Several end-of-line types, mixed.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_EOL_BIN</literal></term>
<listitem><simpara> End-of-line concept not applicable (binary data).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_MASK_EOL</literal></term>
<listitem><simpara> Mask for end-of-line surfaces.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_PERM_21</literal></term>
<listitem><simpara> Odd and even bytes swapped.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_PERM_4321</literal></term>
<listitem><simpara> Reversed byte sequence in 4byte words.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_PERM_MIX</literal></term>
<listitem><simpara> Chunks with both endianess, concatenated.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_MASK_PERM</literal></term>
<listitem><simpara> Mask for permutation surfaces.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_QP</literal></term>
<listitem><simpara> Quoted printables.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_REMOVE</literal></term>
<listitem><simpara> Recode `remove' surface.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_UNKNOWN</literal></term>
<listitem><simpara> Unknown surface.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_SURFACE_MASK_ALL</literal></term>
<listitem><simpara> Mask for all bits, withnout <link linkend="ENCA-SURFACE-UNKNOWN:CAPS"><type>ENCA_SURFACE_UNKNOWN</type></link>.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="EncaCharsetFlags"/>enum EncaCharsetFlags</title>
<indexterm><primary>EncaCharsetFlags</primary></indexterm><programlisting>typedef enum { /*&lt; flags &gt;*/
  ENCA_CHARSET_7BIT      = 1 &lt;&lt; 0,
  ENCA_CHARSET_8BIT      = 1 &lt;&lt; 1,
  ENCA_CHARSET_16BIT     = 1 &lt;&lt; 2,
  ENCA_CHARSET_32BIT     = 1 &lt;&lt; 3,
  ENCA_CHARSET_FIXED     = 1 &lt;&lt; 4,
  ENCA_CHARSET_VARIABLE  = 1 &lt;&lt; 5,
  ENCA_CHARSET_BINARY    = 1 &lt;&lt; 6,
  ENCA_CHARSET_REGULAR   = 1 &lt;&lt; 7,
  ENCA_CHARSET_MULTIBYTE = 1 &lt;&lt; 8
} EncaCharsetFlags;
</programlisting>
<para>
Charset properties.
</para>
<para>
Flags <literal>ENCA_CHARSET_7BIT</literal>, <literal>ENCA_CHARSET_8BIT</literal>, <literal>ENCA_CHARSET_16BIT</literal>,
<literal>ENCA_CHARSET_32BIT</literal> tell how many bits a `fundamental piece' consists of.
This is different from bits per character; r.g. UTF-8 consists of 8bit
pieces (bytes), but character can be composed from 1 to 6 of them.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ENCA_CHARSET_7BIT</literal></term>
<listitem><simpara> Characters are represented with 7bit characters.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_8BIT</literal></term>
<listitem><simpara> Characters are represented with bytes.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_16BIT</literal></term>
<listitem><simpara> Characters are represented with 2byte words.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_32BIT</literal></term>
<listitem><simpara> Characters are represented with 4byte words.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_FIXED</literal></term>
<listitem><simpara> One characters consists of one fundamental piece.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_VARIABLE</literal></term>
<listitem><simpara> One character consists of variable number of
fundamental pieces.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_BINARY</literal></term>
<listitem><simpara> Charset is binary from ASCII viewpoint.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_REGULAR</literal></term>
<listitem><simpara> Language dependent (8bit) charset.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_CHARSET_MULTIBYTE</literal></term>
<listitem><simpara> Multibyte charset.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="EncaNameStyle"/>enum EncaNameStyle</title>
<indexterm><primary>EncaNameStyle</primary></indexterm><programlisting>typedef enum {
  ENCA_NAME_STYLE_ENCA,
  ENCA_NAME_STYLE_RFC1345,
  ENCA_NAME_STYLE_CSTOCS,
  ENCA_NAME_STYLE_ICONV,
  ENCA_NAME_STYLE_HUMAN,
  ENCA_NAME_STYLE_MIME
} EncaNameStyle;
</programlisting>
<para>
Charset naming styles and conventions.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ENCA_NAME_STYLE_ENCA</literal></term>
<listitem><simpara> Default, implicit charset name in Enca.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_NAME_STYLE_RFC1345</literal></term>
<listitem><simpara> RFC 1345 or otherwise canonical charset name.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_NAME_STYLE_CSTOCS</literal></term>
<listitem><simpara> Cstocs charset name (may not exist).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_NAME_STYLE_ICONV</literal></term>
<listitem><simpara> Iconv charset name (may not exist).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_NAME_STYLE_HUMAN</literal></term>
<listitem><simpara> Human comprehensible description.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_NAME_STYLE_MIME</literal></term>
<listitem><simpara> Preferred MIME name (may not exist).
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="EncaErrno"/>enum EncaErrno</title>
<indexterm><primary>EncaErrno</primary></indexterm><programlisting>typedef enum {
  ENCA_EOK = 0,
  ENCA_EINVALUE,
  ENCA_EEMPTY,
  ENCA_EFILTERED,
  ENCA_ENOCS8,
  ENCA_ESIGNIF,
  ENCA_EWINNER,
  ENCA_EGARBAGE
} EncaErrno;
</programlisting>
<para>
Error codes.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>ENCA_EOK</literal></term>
<listitem><simpara> OK.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_EINVALUE</literal></term>
<listitem><simpara> Invalid value (usually of an option).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_EEMPTY</literal></term>
<listitem><simpara> Sample is empty.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_EFILTERED</literal></term>
<listitem><simpara> After filtering, (almost) nothing remained.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_ENOCS8</literal></term>
<listitem><simpara> Mulitibyte tests failed and language contains no 8bit charsets.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_ESIGNIF</literal></term>
<listitem><simpara> Too few significant characters.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_EWINNER</literal></term>
<listitem><simpara> No clear winner.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>ENCA_EGARBAGE</literal></term>
<listitem><simpara> Sample is garbage.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="ENCA-NOT-A-CHAR:CAPS"/>ENCA_NOT_A_CHAR</title>
<indexterm><primary>ENCA_NOT_A_CHAR</primary></indexterm><programlisting>#define ENCA_NOT_A_CHAR 0xffff
</programlisting>
<para>
Not-a-character in unicode tables.</para>
<para>

</para></refsect2>

</refsect1>




</refentry>
