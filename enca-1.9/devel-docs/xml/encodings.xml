<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libenca-Charsets-and-Surfaces">
<refmeta>
<refentrytitle>Charsets and Surfaces</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBENCA Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Charsets and Surfaces</refname><refpurpose>Functions and macros for getting something sensible from <link linkend="EncaEncoding"><type>EncaEncoding</type></link>.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



const <link linkend="char">char</link>* <link linkend="enca-charset-name">enca_charset_name</link>               (<link linkend="int">int</link> charset,
                                             <link linkend="EncaNameStyle">EncaNameStyle</link> whatname);
const <link linkend="char">char</link>** <link linkend="enca-get-charset-aliases">enca_get_charset_aliases</link>       (<link linkend="int">int</link> charset,
                                             <link linkend="size-t">size_t</link> *n);
<link linkend="char">char</link>*       <link linkend="enca-get-surface-name">enca_get_surface_name</link>           (<link linkend="EncaSurface">EncaSurface</link> surface,
                                             <link linkend="EncaNameStyle">EncaNameStyle</link> whatname);
<link linkend="EncaEncoding">EncaEncoding</link> <link linkend="enca-parse-encoding-name">enca_parse_encoding_name</link>       (const <link linkend="char">char</link> *name);
<link linkend="EncaSurface">EncaSurface</link> <link linkend="enca-charset-natural-surface">enca_charset_natural_surface</link>    (<link linkend="int">int</link> charset);
<link linkend="EncaCharsetFlags">EncaCharsetFlags</link> <link linkend="enca-charset-properties">enca_charset_properties</link>    (<link linkend="int">int</link> charset);
#define     <link linkend="enca-charset-is-7bit">enca_charset_is_7bit</link>            (cs)
#define     <link linkend="enca-charset-is-8bit">enca_charset_is_8bit</link>            (cs)
#define     <link linkend="enca-charset-is-16bit">enca_charset_is_16bit</link>           (cs)
#define     <link linkend="enca-charset-is-32bit">enca_charset_is_32bit</link>           (cs)
#define     <link linkend="enca-charset-is-fixed">enca_charset_is_fixed</link>           (cs)
#define     <link linkend="enca-charset-is-variable">enca_charset_is_variable</link>        (cs)
#define     <link linkend="enca-charset-is-binary">enca_charset_is_binary</link>          (cs)
#define     <link linkend="enca-charset-is-regular">enca_charset_is_regular</link>         (cs)
#define     <link linkend="enca-charset-is-multibyte">enca_charset_is_multibyte</link>       (cs)
#define     <link linkend="enca-charset-is-known">enca_charset_is_known</link>           (cs)
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="enca-charset-name"/>enca_charset_name ()</title>
<indexterm><primary>enca_charset_name</primary></indexterm><programlisting>const <link linkend="char">char</link>* enca_charset_name               (<link linkend="int">int</link> charset,
                                             <link linkend="EncaNameStyle">EncaNameStyle</link> whatname);</programlisting>
<para>
Translates numeric charset id <parameter>charset</parameter> to some kind of name.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><simpara> A charset id.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>whatname</parameter>&nbsp;:</term>
<listitem><simpara> Teh type of name you request.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The requested charset name; <link linkend="NULL:CAPS"><type>NULL</type></link> for invalid <parameter>whatname</parameter> or
<parameter>charset</parameter>, or when <parameter>whatname</parameter> name doesn't exist for charset <parameter>charset</parameter>
(<link linkend="ENCA-CS-UNKNOWN:CAPS"><type>ENCA_CS_UNKNOWN</type></link> is OK).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-get-charset-aliases"/>enca_get_charset_aliases ()</title>
<indexterm><primary>enca_get_charset_aliases</primary></indexterm><programlisting>const <link linkend="char">char</link>** enca_get_charset_aliases       (<link linkend="int">int</link> charset,
                                             <link linkend="size-t">size_t</link> *n);</programlisting>
<para>
Returns list of accepted aliases for charset <parameter>charset</parameter>.
</para>
<para>
The list of aliases has to be freed by caller; the strings themselves
must be considered constant and must NOT be freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><simpara> A charset id.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n</parameter>&nbsp;:</term>
<listitem><simpara> The number of aliases will be stored here.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The list of aliases, storing their number into *<parameter>n</parameter>; <link linkend="NULL:CAPS"><type>NULL</type></link> for
invalid <parameter>charset</parameter> (*<parameter>n</parameter> is zero then).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-get-surface-name"/>enca_get_surface_name ()</title>
<indexterm><primary>enca_get_surface_name</primary></indexterm><programlisting><link linkend="char">char</link>*       enca_get_surface_name           (<link linkend="EncaSurface">EncaSurface</link> surface,
                                             <link linkend="EncaNameStyle">EncaNameStyle</link> whatname);</programlisting>
<para>
Constructs surface name from surface flags <parameter>surface</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>surface</parameter>&nbsp;:</term>
<listitem><simpara> A surface.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>whatname</parameter>&nbsp;:</term>
<listitem><simpara> The type of name you request.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The requested surface name; <link linkend="NULL:CAPS"><type>NULL</type></link> for invalid <parameter>whatname</parameter>; empty
string for naming style not supporting surfaces.  In all cases, the
returned string must be freed by caller when no longer used.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-parse-encoding-name"/>enca_parse_encoding_name ()</title>
<indexterm><primary>enca_parse_encoding_name</primary></indexterm><programlisting><link linkend="EncaEncoding">EncaEncoding</link> enca_parse_encoding_name       (const <link linkend="char">char</link> *name);</programlisting>
<para>
Transofrms encoding specification charset/surface into numeric <link linkend="EncaEncoding"><type>EncaEncoding</type></link>.
</para>
<para>
When the charset name is not recognized, surfaces are not parsed at all and
<link linkend="ENCA-CS-UNKNOWN:CAPS"><type>ENCA_CS_UNKNOWN</type></link> is returned as charset.  However, unrecognized surfaces are
considered only a minor problem causing <literal>ENCA_SURFACE_UNKNOWN</literal> flag to be
set in the result, beside recognized surface flags.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> An encoding specification.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The charset/surface pair.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-natural-surface"/>enca_charset_natural_surface ()</title>
<indexterm><primary>enca_charset_natural_surface</primary></indexterm><programlisting><link linkend="EncaSurface">EncaSurface</link> enca_charset_natural_surface    (<link linkend="int">int</link> charset);</programlisting>
<para>
Returns natural surface of a charset.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><simpara> A charset.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The requested charset natural surface (called `implied' in recode),
         zero for invalid <parameter>charset</parameter> or for charsets with no natural surface.

         Natrual surface is the surface one expects for a given charset --
         e.g. CRLF EOLs for IBM/Microsoft charsets, CR EOLs for Macintosh
         charsets and LF EOLs for ISO/Unix charsets.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-properties"/>enca_charset_properties ()</title>
<indexterm><primary>enca_charset_properties</primary></indexterm><programlisting><link linkend="EncaCharsetFlags">EncaCharsetFlags</link> enca_charset_properties    (<link linkend="int">int</link> charset);</programlisting>
<para>
Returns charset properties.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>charset</parameter>&nbsp;:</term>
<listitem><simpara> A charset.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The requested charset properties; zero for invalid <parameter>charset</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-7bit"/>enca_charset_is_7bit()</title>
<indexterm><primary>enca_charset_is_7bit</primary></indexterm><programlisting>#define     enca_charset_is_7bit(cs)</programlisting>
<para>
Expands to nonzero when characters are represented with 7bit characters.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-8bit"/>enca_charset_is_8bit()</title>
<indexterm><primary>enca_charset_is_8bit</primary></indexterm><programlisting>#define     enca_charset_is_8bit(cs)</programlisting>
<para>
Expands to nonzero when characters are represented with bytes.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-16bit"/>enca_charset_is_16bit()</title>
<indexterm><primary>enca_charset_is_16bit</primary></indexterm><programlisting>#define     enca_charset_is_16bit(cs)</programlisting>
<para>
Expands to nonzero when characters are represented with 2byte words.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-32bit"/>enca_charset_is_32bit()</title>
<indexterm><primary>enca_charset_is_32bit</primary></indexterm><programlisting>#define     enca_charset_is_32bit(cs)</programlisting>
<para>
Expands to nonzero when characters are represented with 4byte words.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-fixed"/>enca_charset_is_fixed()</title>
<indexterm><primary>enca_charset_is_fixed</primary></indexterm><programlisting>#define     enca_charset_is_fixed(cs)</programlisting>
<para>
Expands to nonzero when one characters consists of one fundamental piece.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-variable"/>enca_charset_is_variable()</title>
<indexterm><primary>enca_charset_is_variable</primary></indexterm><programlisting>#define     enca_charset_is_variable(cs)</programlisting>
<para>
Expands to nonzero when one character consists of variable number of
fundamental pieces.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-binary"/>enca_charset_is_binary()</title>
<indexterm><primary>enca_charset_is_binary</primary></indexterm><programlisting>#define     enca_charset_is_binary(cs)</programlisting>
<para>
Expands to nonzero when charset is binary from ASCII viewpoint.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-regular"/>enca_charset_is_regular()</title>
<indexterm><primary>enca_charset_is_regular</primary></indexterm><programlisting>#define     enca_charset_is_regular(cs)</programlisting>
<para>
Expands to nonzero when charset is language dependent (8bit) charset.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-multibyte"/>enca_charset_is_multibyte()</title>
<indexterm><primary>enca_charset_is_multibyte</primary></indexterm><programlisting>#define     enca_charset_is_multibyte(cs)</programlisting>
<para>
Expands to nonzero when charset is multibyte.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="enca-charset-is-known"/>enca_charset_is_known()</title>
<indexterm><primary>enca_charset_is_known</primary></indexterm><programlisting>#define     enca_charset_is_known(cs)</programlisting>
<para>
Expands to nonzero when the charset is known (i.e. it's not
ENCA_CS_UNKNOWN).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>cs</parameter>&nbsp;:</term>
<listitem><simpara> Charset id.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
