Index: include/a52.h
===================================================================
RCS file: /cvsroot/liba52/a52dec/include/a52.h,v
retrieving revision 1.9
diff -u -r1.9 a52.h
--- include/a52.h	24 Jan 2003 10:52:58 -0000	1.9
+++ include/a52.h	16 Sep 2005 17:55:52 -0000
@@ -55,7 +55,7 @@
 
 a52_state_t * a52_init (uint32_t mm_accel);
 sample_t * a52_samples (a52_state_t * state);
-int a52_syncinfo (uint8_t * buf, int * flags,
+int a52_syncinfo (a52_state_t * state, uint8_t * buf, int * flags,
 		  int * sample_rate, int * bit_rate);
 int a52_frame (a52_state_t * state, uint8_t * buf, int * flags,
 	       level_t * level, sample_t bias);
Index: liba52/a52_internal.h
===================================================================
RCS file: /cvsroot/liba52/a52dec/liba52/a52_internal.h,v
retrieving revision 1.14
diff -u -r1.14 a52_internal.h
--- liba52/a52_internal.h	28 Jan 2003 08:17:59 -0000	1.14
+++ liba52/a52_internal.h	14 Sep 2005 19:09:12 -0000
@@ -70,6 +70,7 @@
     uint16_t lfsr_state;	/* dither state */
     uint32_t bits_left;
     uint32_t current_word;
+    uint32_t bigendian_mode;
 
     uint8_t csnroffst;		/* coarse SNR offset */
     ba_t cplba;			/* coupling bit allocation parameters */
Index: liba52/bitstream.c
===================================================================
RCS file: /cvsroot/liba52/a52dec/liba52/bitstream.c,v
retrieving revision 1.9
diff -u -r1.9 bitstream.c
--- liba52/bitstream.c	1 Jun 2003 00:28:55 -0000	1.9
+++ liba52/bitstream.c	14 Sep 2005 19:21:44 -0000
@@ -31,13 +31,14 @@
 
 #define BUFFER_SIZE 4096
 
-void a52_bitstream_set_ptr (a52_state_t * state, uint8_t * buf)
+void a52_bitstream_set_ptr (a52_state_t * state, uint8_t * buf, uint32_t bigendian_mode)
 {
     int align;
 
     align = (long)buf & 3;
     state->buffer_start = (uint32_t *) (buf - align);
     state->bits_left = 0;
+    state->bigendian_mode = bigendian_mode;
     state->current_word = 0;
     bitstream_get (state, align * 8);
     bitstream_get_2 (state, 0);	/* pretend function is used - keep gcc happy */
@@ -48,7 +49,10 @@
     uint32_t tmp;
 
     tmp = *(state->buffer_start++);
-    state->current_word = swab32 (tmp);
+    if (state->bigendian_mode)
+        state->current_word = swab32 (tmp);
+    else
+        state->current_word = swable32 (tmp);
 }
 
 /*
Index: liba52/bitstream.h
===================================================================
RCS file: /cvsroot/liba52/a52dec/liba52/bitstream.h,v
retrieving revision 1.7
diff -u -r1.7 bitstream.h
--- liba52/bitstream.h	9 Jan 2003 07:55:03 -0000	1.7
+++ liba52/bitstream.h	14 Sep 2005 19:23:18 -0000
@@ -46,7 +46,20 @@
 #	endif
 #endif
 
-void a52_bitstream_set_ptr (a52_state_t * state, uint8_t * buf);
+#ifdef WORDS_BIGENDIAN
+
+#   define swable32(x)\
+((((uint8_t*)&x)[0] << 16) | (((uint8_t*)&x)[1] << 24) |  \
+ (((uint8_t*)&x)[2])  | (((uint8_t*)&x)[3] << 8))
+
+#else
+
+#   define swable32(x)\
+((((uint16_t*)&x)[0] << 16) | (((uint16_t*)&x)[1]))
+
+#endif
+
+void a52_bitstream_set_ptr (a52_state_t * state, uint8_t * buf, uint32_t bigendian_mode);
 uint32_t a52_bitstream_get_bh (a52_state_t * state, uint32_t num_bits);
 int32_t a52_bitstream_get_bh_2 (a52_state_t * state, uint32_t num_bits);
 
Index: liba52/parse.c
===================================================================
RCS file: /cvsroot/liba52/a52dec/liba52/parse.c,v
retrieving revision 1.22
diff -u -r1.22 parse.c
--- liba52/parse.c	28 Jan 2003 07:39:35 -0000	1.22
+++ liba52/parse.c	25 Sep 2005 17:40:56 -0000
@@ -83,7 +83,7 @@
     return state->samples;
 }
 
-int a52_syncinfo (uint8_t * buf, int * flags,
+int a52_syncinfo (a52_state_t * state, uint8_t * buf, int * flags,
 		  int * sample_rate, int * bit_rate)
 {
     static int rate[] = { 32,  40,  48,  56,  64,  80,  96, 112,
@@ -94,26 +94,44 @@
     int bitrate;
     int half;
     int acmod;
+    int bigendian_mode = -1;
+    uint32_t buf4;
+    uint32_t buf5;
+    uint32_t buf6;
+
+    if ((buf[0] == 0x0b) && (buf[1] == 0x77))	/* syncword */
+      bigendian_mode = 1;
+    if ((buf[0] == 0x77) && (buf[1] == 0x0b))	/* syncword */
+      bigendian_mode = 0;
 
-    if ((buf[0] != 0x0b) || (buf[1] != 0x77))	/* syncword */
-	return 0;
+    if (bigendian_mode == -1)
+	    return 0;
 
-    if (buf[5] >= 0x60)		/* bsid >= 12 */
-	return 0;
-    half = halfrate[buf[5] >> 3];
+
+    a52_bitstream_set_ptr (state, buf + 2, bigendian_mode);
+    //0,1 were sync bytes
+    //2, 3 unused?
+    bitstream_get(state, 16);
+    buf4 = bitstream_get(state, 8);
+    buf5 = bitstream_get(state, 8);
+    buf6 = bitstream_get(state, 8);
+
+    if (buf5 >= 0x60)		/* bsid >= 12 */
+	    return 0;
+    half = halfrate[buf5 >> 3];
 
     /* acmod, dsurmod and lfeon */
-    acmod = buf[6] >> 5;
-    *flags = ((((buf[6] & 0xf8) == 0x50) ? A52_DOLBY : acmod) |
-	      ((buf[6] & lfeon[acmod]) ? A52_LFE : 0));
+    acmod = buf6 >> 5;
+    *flags = ((((buf6 & 0xf8) == 0x50) ? A52_DOLBY : acmod) |
+	      ((buf6 & lfeon[acmod]) ? A52_LFE : 0));
 
-    frmsizecod = buf[4] & 63;
+    frmsizecod = buf4 & 63;
     if (frmsizecod >= 38)
 	return 0;
     bitrate = rate [frmsizecod >> 1];
     *bit_rate = (bitrate * 1000) >> half;
 
-    switch (buf[4] & 0xc0) {
+    switch (buf4 & 0xc0) {
     case 0:
 	*sample_rate = 48000 >> half;
 	return 4 * bitrate;
@@ -138,12 +156,14 @@
     int chaninfo;
     int acmod;
 
-    state->fscod = buf[4] >> 6;
-    state->halfrate = halfrate[buf[5] >> 3];
-    state->acmod = acmod = buf[6] >> 5;
+    //0,1 were sync bytes, 2, 3 unused?
+    a52_bitstream_set_ptr (state, buf + 4, state->bigendian_mode);
 
-    a52_bitstream_set_ptr (state, buf + 6);
-    bitstream_get (state, 3);	/* skip acmod we already parsed */
+    state->fscod = bitstream_get(state, 2);
+    bitstream_get(state, 6);
+    state->halfrate = halfrate[bitstream_get(state, 5)];
+    bitstream_get(state, 3);
+    state->acmod = acmod = bitstream_get(state, 3);
 
     if ((acmod == 2) && (bitstream_get (state, 2) == 2))	/* dsurmod */
 	acmod = A52_DOLBY;
