`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [/usr/local/samba]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, `make install' will install all the files in
`/usr/local/samba/bin', `/usr/local/samba/lib' etc.  You can specify
an installation prefix other than `/usr/local/samba' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-static=PKGS    build static libraries default=no
  --enable-shared=PKGS    build shared libraries default=yes
  --enable-pie            Turn on pie support if available (default=yes)
  --enable-debug          Turn on compiler debugging information (default=no)
  --enable-socket-wrapper         Turn on socket wrapper library (default=no)
  --enable-developer      Turn on developer warnings and debugging (default=no)
  --enable-krb5developer  Turn on developer warnings and debugging, except -Wstrict-prototypes (default=no)
  --enable-dmalloc        Enable heap debugging default=no
  --enable-cups           Turn on CUPS support (default=auto)
  --enable-iprint         Turn on iPrint support (default=yes if cups is yes)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-fhs              Use FHS-compliant paths (default=no)
  --with-privatedir=DIR   Where to put smbpasswd ($ac_default_prefix/private)
  --with-rootsbindir=DIR  Which directory to use for root sbin ($ac_default_prefix/sbin)
  --with-lockdir=DIR      Where to put lock files ($ac_default_prefix/var/locks)
  --with-piddir=DIR       Where to put pid files ($ac_default_prefix/var/locks)
  --with-swatdir=DIR      Where to put SWAT files ($ac_default_prefix/swat)
  --with-configdir=DIR    Where to put configuration files ($libdir)
  --with-logfilebase=DIR  Where to put log files ($VARDIR)
  --with-libdir=DIR       Where to put libdir ($libdir)
  --with-pammodulesdir=DIR  Which directory to use for PAM modules ($ac_default_prefix/$libdir/security)
  --with-mandir=DIR       Where to put man pages ($mandir)
  --with-cfenc=HEADERDIR  Use internal CoreFoundation encoding API
			  for optimization (Mac OS X/Darwin only)
  --with-selftest-prefix=DIR    The prefix where make test will be runned ($selftest_prefix)
  --with-smbtorture4-path=PATH    The path to a samba4 smbtorture for make test (none)
  --with-profiling-data   Include gathering source code profile information (default=no)
  --with-readline=DIR     Look for readline include/libs in DIR (default=auto)
  --with-libiconv=BASEDIR Use libiconv in BASEDIR/lib and BASEDIR/include (default=auto)
  --with-smbwrapper       Include SMB wrapper support (default=no)
  --with-afs              Include AFS clear-text auth support (default=no)
  --with-fake-kaserver    Include AFS fake-kaserver support (default=no)
  --with-vfs-afsacl       Include AFS to NT ACL mapping module (default=no)
  --with-dce-dfs          Include DCE/DFS clear-text auth support (default=no)
  --with-ldap             LDAP support (default yes)
  --with-ads              Active Directory support (default auto)
  --with-krb5=base-dir    Locate Kerberos 5 support (default=/usr)
  --with-automount        Include automount support (default=no)
  --with-smbmount         Include smbmount (Linux only) support (default=no)
  --with-cifsmount        Include mount.cifs and umount.cifs (Linux only) support (default=yes)
  --with-pam              Include PAM support (default=no)
  --with-pam_smbpass      Build PAM module for authenticating against passdb backends (default=no)
  --with-nisplus-home     Include NISPLUS_HOME support (default=no)
  --with-syslog           Include experimental SYSLOG support (default=no)
  --with-quotas           Include disk-quota support (default=no)
  --with-sys-quotas       Include lib/sysquotas.c support (default=auto)
  --with-utmp             Include utmp accounting (default, if supported by OS)
  --with-libmsrpc         Build the libmsrpc shared library (default=yes if shared libs supported)
  --with-libsmbclient     Build the libsmbclient shared library (default=yes if shared libs supported)
  --with-libsmbsharemodes     Build the libsmbsharemodes shared library (default=yes if shared libs supported)
  --with-spinlocks        Use spin locks instead of fcntl locks (default=no)
  --with-acl-support      Include ACL support (default=no)
  --with-aio-support      Include asynchronous io support (default=no)
  --with-sendfile-support Check for sendfile support (default=yes)
  --with-winbind          Build winbind (default, if supported by OS)
  --with-included-popt    use bundled popt library, not from system
  --with-included-iniparser    use bundled iniparser library, not from system
  --with-python=PYTHONNAME  build Python libraries
  --with-static-modules=MODULES  Comma-seperated list of names of modules to statically link in
  --with-shared-modules=MODULES  Comma-seperated list of names of modules to build shared

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
              headers in a nonstandard directory <include dir>
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

