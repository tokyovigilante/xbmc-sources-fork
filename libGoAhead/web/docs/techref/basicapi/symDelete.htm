<html>
<head>
<!- Copyright (c) Go Ahead Software Inc., 1995-2000. All Rights Reserved. ->
<title>symDelete -- basic</title>
<link rel="stylesheet" href="../../../style/doc.css" type="text/css">
</head>

<body>
 <table width="550"> <tr><td>
<table border=0 width=100% cellspacing=0 cellpadding=0 CLASS="apiTitle">
<tr>
	<td class="titleLeft" align=left width="33%"><b> symDelete</b></td><td class="titleCenter" align=center width="33%"><b> basic</b></td><td class="titleRight" align=right width="33%"><B> EMF</B></td></tr>
</table><hr>
<h2>Synopsis</h2><p>Deletes a lookup-value pair from a symbol table.</p><h2>Prototype</h2><pre>
 #include &quot;uemf.h&quot;

 int <b>symDelete</b>(sym_fd_t sd, char_t* name);
</pre><h2>Parameters</h2><table width=100% BORDER="0" CELLPADDING="0" CELLSPACING="0">
    
    <tr>
        <td>sd</td><td>Handle to the table created from a previous call to <a href="symOpen.htm">symOpen</a>.</td></tr>
    <tr>
        <td>name</td><td>The string lookup key for the value to be deleted.</td></tr>
</table><h2>Description</h2><p> This module implements a highly efficient generic symbol table with update 
  and access routines. Symbols are simple character strings and the values they 
  take can be flexible types as defined by <a href="value_t.htm">value_t</a>. 
  This module allows multiple symbol tables to be created. </p><p>
Frees and deletes an existing symbol from the table.
<a href=valueFree.htm> </a> is called for each symbol that is 
deleted.
</p><h2>Return Value</h2><p> 
Returns 0 on success or -1 on error. 
</p><h2>Example</h2><pre>
int symDelete(id, "lookup");
</pre><h2>Stability Classification</h2><p>Evolving.</p><h2></h2><h2></h2><h2></h2><h2>See Also</h2><p>
<a href="symClose.htm">symClose</a>,
<a href="symFirst.htm">symFirst</a>,
<a href="symLookup.htm">symLookup</a>,
<a href="symNext.htm">symNext</a>,
<a href="symOpen.htm">symOpen</a>
</p></td></tr></table>
</body>
</html>
